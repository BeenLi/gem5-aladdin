This file is to record things I try to figure out how gem5 works. 


08-11-2014
1. To compile gem5
It's a relatively staightforward process if you set up all the 
dependences. One of the biggest issue I run into is missing stddef.h for newer
version of gcc. I fixed that by modifying src/python/m5/params.py and
SimObject.py. 

Adding the following lines after "code('%module(package="m5.internal") ${{self.swig_module_name()}}')"

        code('''\
/**
  * This is a workaround for bug in swig. Prior to gcc 4.6.1 the STL
  * headers like vector, string, etc. used to automatically pull in
  * the cstddef header but starting with gcc 4.6.1 they no longer do.
  * This leads to swig generated a file that does not compile so we
  * explicitly include cstddef. Additionally, including version 2.0.4,
  * swig uses ptrdiff_t without the std:: namespace prefix which is
  * required with gcc 4.6.1. We explicitly provide access to it.
  */
#include <cstddef>
#include <stddef.h>
using std::ptrdiff_t;
''')
        code('%}')

2. debug flags
gem5 takes debug flags, to see all the flags:
./gem5.opt --debug-help

to enable specific flags, e.g., Decode and Decoder,

./gem5.opt --debug-flags=Decode,Decoder

3. Useful wiki links
http://www.gem5.org/docs/html/gem5MemorySystem.html
